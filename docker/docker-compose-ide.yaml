version: '3.8'

networks:
  app:
    driver: bridge

services:
  rest-api:
    build: ../task-tracker-rest-api
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - HOST=${HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - app
    depends_on:
      - postgres
      - kafka
    env_file:
      - .env
    ports:
      - '8080:8080'
  email-sender:
    build: ../task-tracker-email-sender
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
    networks:
      - app
    depends_on:
      - kafka
    env_file:
      - .env
    ports:
      - '8081:8081'

  scheduler:
    build: ../task-tracker-scheduler
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - HOST=${HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - app
    depends_on:
      - postgres
      - kafka
    env_file:
      - .env
    ports:
      - '8082:8082'

  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    environment:
      - ZOOKEEPER_CLIENT_PORT=${ZOOKEEPER_CLIENT_PORT}
      - ZOOKEEPER_TICK_TIME=${ZOOKEEPER_TICK_TIME}
    networks:
      - app
    env_file:
      - .env
    ports:
      - '2181:2181'

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    environment:
      - KAFKA_BROKER_ID=${KAFKA_BROKER_ID}
      - KAFKA_ZOOKEEPER_CONNECT=${KAFKA_ZOOKEEPER_CONNECT}
      - KAFKA_ADVERTISED_LISTENERS=${KAFKA_ADVERTISED_LISTENERS}
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    networks:
      - app
    depends_on:
      - zookeeper
    env_file:
      - .env
    ports:
      - '9092:9092'

  postgres:
    image: 'postgres:latest'
    networks:
      - app
    env_file:
      - .env
    ports:
      - '5432:5432'